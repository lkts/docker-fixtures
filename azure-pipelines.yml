# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
pool:
  vmImage: 'Ubuntu 16.04'

variables:
  buildConfiguration: 'Release'
  sln: '$(Build.SourcesDirectory)/docker-fixtures.sln'
  toolsPath: '$(Build.SourcesDirectory)/.tools'
  tests: '$(Build.SourcesDirectory)/src/Tests/DockerFixtures.Tests/DockerFixtures.Tests.csproj'  
  coverageResults: '$(Build.SourcesDirectory)/reports/coverage'

steps:
- script: dotnet build --configuration $(buildConfiguration) $(sln)
  displayName: 'Build'

- script: dotnet test $(tests) --logger "xunit;LogFileName=TestResults.xml" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura
  displayName: 'Run tests'

- task: PublishTestResults@2
  displayName: 'Publish test results'
  inputs:
    testResultsFormat: 'xUnit'
    testResultsFiles: '**/TestResults.xml'

- script: |
    sudo apt install fonts-liberation
    dotnet tool install dotnet-reportgenerator-globaltool --version 4.0.3 --tool-path $(toolsPath)
    $(toolsPath)/reportgenerator "-reports:$(Build.SourcesDirectory)/**/coverage.cobertura.xml" "-targetdir:$(coverageResults)" "-reporttypes:HtmlInline_AzurePipelines;Cobertura;Badges"
  displayName: Generate code coverage report

- task: PublishCodeCoverageResults@1
  displayName: Publish code coverage results
  enabled: true
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(coverageResults)/Cobertura.xml'
    reportDirectory: '$(coverageResults)'